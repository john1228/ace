<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ace.dao.OrderMapper">
    <resultMap type="com.ace.entity.Order" id="dMap">
        <id column="id" property="id"/>
        <result column="account_id" property="accountId"/>
        <result column="account_name" property="accountName"/>
        <result column="order_no" property="orderNo"/>
        <result column="total" property="total"/>
        <result column="coupon" property="coupon"/>
        <result column="pay_amount" property="payAmount"/>
        <result column="status" property="status"/>
        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>
        <result column="invoice" property="invoice"/>
        <association property="appointment" javaType="com.ace.entity.Appointment">
            <result column="appointed_room_id" property="roomId"/>
            <result column="appointed_room_name" property="roomName"/>
            <result column="appointed_start_time" property="startTime"/>
            <result column="appointed_end_time" property="endTime"/>
            <result column="appointed_contact_name" property="contactName"/>
            <result column="appointed_contact_mobile" property="contactMobile"/>
            <result column="appointed_remark" property="remark"/>
            <collection column="id" property="service" foreignColumn="order_id"
                        ofType="com.ace.entity.OrderSupport" resultSet="service"
                        select="com.ace.dao.OrderSupportMapper.supportList"/>
        </association>
    </resultMap>
    <resultMap type="com.ace.entity.Order" id="lMap">
        <id column="id" property="id"/>
        <result column="account_id" property="accountId"/>
        <result column="account_name" property="accountName"/>
        <result column="order_no" property="orderNo"/>
        <result column="total" property="total"/>
        <result column="coupon" property="coupon"/>
        <result column="pay_amount" property="payAmount"/>
        <result column="status" property="status"/>
        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>
        <result column="invoice" property="invoice"/>
        <association property="appointment" javaType="com.ace.entity.Appointment">
            <result column="appointed_room_id" property="roomId"/>
            <result column="appointed_room_name" property="roomName"/>
            <result column="appointed_room_cover" property="roomCover"/>
            <result column="appointed_start_time" property="startTime"/>
            <result column="appointed_end_time" property="endTime"/>
            <result column="appointed_contact_name" property="contactName"/>
            <result column="appointed_contact_mobile" property="contactMobile"/>
            <result column="appointed_room_address" property="address"/>
        </association>
    </resultMap>


    <select id="recordsTotal" resultType="java.lang.Long">
        SELECT count(1) AS recordsTotal FROM bb_orders
        LEFT JOIN bb_order_appointments ON bb_orders.id = bb_order_appointments.order_id
        INNER JOIN bb_rooms ON bb_rooms.id = bb_order_appointments.room_id
        <where>
            <if test="staff!=null">
                AND bb_rooms.project_id = #{staff.projectId}
            </if>
            <if test="criteria.keyword!=null and criteria.keyword!=''">
                AND ((CONCAT(DATE_FORMAT(bb_orders.created_at, '%Y%m%d'), LPAD(bb_orders.id, 6, 0)) LIKE
                CONCAT('%',#{criteria.keyword},'%')) OR (bb_order_appointments.contact_name LIKE
                CONCAT('%',#{criteria.keyword},'%')) OR
                (bb_order_appointments.contact_mobile LIKE CONCAT('%',#{criteria.keyword},'%')))
            </if>
            <if test="criteria.proId!=null">
                AND bb_rooms.project_id = #{criteria.proId}
            </if>
            <if test="criteria.orgId!=null">
                AND bb_rooms.org_id = #{criteria.orgId}
            </if>
            <if test="criteria.total!=null">
                AND bb_orders.total > #{criteria.total}
            </if>
            <if test="criteria.payAmount!=null">
                AND bb_orders.pay_amount > #{criteria.payAmount}
            </if>
            <if test="criteria.from!=null">
                AND bb_orders.created_at >= #{criteria.from}
            </if>
            <if test="criteria.to!=null">
                AND #{criteria.to} >= bb_orders.created_at
            </if>
            <if test="criteria.projectName!=null">
                AND bb_rooms.project_name LIKE CONCAT('%',#{criteria.projectName},'%')
            </if>
        </where>
    </select>

    <select id="dataList" resultType="com.ace.entity.Order">
        SELECT bb_orders.id,
        CONCAT(DATE_FORMAT(bb_orders.created_at, '%Y%m%d'), LPAD(bb_orders.id, 6, 0)) AS orderNo,
        bb_orders.account_id AS accountId,
        bb_orders.account_name AS accountName,
        bb_orders.total,
        bb_orders.pay_amount AS payAmount,
        bb_orders.coupon,
        bb_orders.status,
        bb_orders.remark,
        bb_orders.created_at AS createdAt,
        bb_orders.updated_at AS updatedAt
        FROM bb_orders
        LEFT JOIN bb_order_appointments ON bb_orders.id =
        bb_order_appointments.order_id
        INNER JOIN bb_rooms ON bb_rooms.id = bb_order_appointments.room_id
        <where>
            <if test="staff!=null">
                AND project_id = #{staff.projectId}
            </if>
            <if test="criteria.keyword!=null and criteria.keyword!=''">
                AND ((CONCAT(DATE_FORMAT(bb_orders.created_at, '%Y%m%d'), LPAD(bb_orders.id, 6, 0)) LIKE
                CONCAT('%',#{criteria.keyword},'%')) OR (bb_order_appointments.contact_name LIKE
                CONCAT('%',#{criteria.keyword},'%')) OR
                (bb_order_appointments.contact_mobile LIKE CONCAT('%',#{criteria.keyword},'%')))
            </if>
            <if test="criteria.proId!=null and criteria.proId!=''">
                AND bb_rooms.project_id = #{criteria.proId}
            </if>
            <if test="criteria.orgId!=null and criteria.orgId!=''">
                AND bb_rooms.org_id = #{criteria.orgId}
            </if>
            <if test="criteria.total!=null">
                AND bb_orders.total > #{criteria.total}
            </if>
            <if test="criteria.payAmount!=null">
                AND bb_orders.pay_amount > #{criteria.payAmount}
            </if>
            <if test="criteria.from!=null">
                AND bb_orders.created_at >= #{criteria.from}
            </if>
            <if test="criteria.to!=null">
                AND #{criteria.to} >= bb_orders.created_at
            </if>
            <if test="criteria.projectName!=null">
                AND bb_rooms.project_name LIKE CONCAT('%',#{criteria.projectName},'%')
            </if>
        </where>
        ORDER BY id DESC
        LIMIT #{criteria.start},#{criteria.length}
    </select>

    <select id="customerOrder" resultMap="lMap">
        SELECT bb_orders.id,
        CONCAT(DATE_FORMAT(bb_orders.created_at, '%Y%m%d'), LPAD(bb_orders.id, 6, 0)) AS order_no,
        bb_orders.account_id,
        bb_orders.account_name,
        bb_orders.total,
        bb_orders.pay_amount,
        bb_orders.coupon,
        bb_orders.status,
        bb_orders.remark,
        bb_orders.created_at,
        bb_orders.updated_at,
        CASE
        WHEN bb_invoices.id IS NULL THEN false
        ELSE true
        END AS invoice,
        bb_rooms.id AS appointed_room_id,
        bb_rooms.name AS appointed_room_name,
        CONCAT('https://bb-platform.oss-cn-hangzhou.aliyuncs.com/',bb_rooms.cover) AS appointed_room_cover,
        bb_order_appointments.start_time AS appointed_start_time,
        bb_order_appointments.end_time AS appointed_end_time,
        bb_order_appointments.contact_name AS appointed_contact_name,
        bb_order_appointments.contact_mobile AS appointed_contact_mobile,
        CONCAT(bb_rooms.project_name,bb_rooms.building_no,bb_rooms.floor_no,bb_rooms.room_no) AS
        appointed_room_address
        FROM bb_orders
        LEFT JOIN bb_invoices ON bb_orders.id = bb_invoices.order_id
        LEFT JOIN bb_order_appointments ON bb_orders.id = bb_order_appointments.order_id
        INNER JOIN bb_rooms ON bb_order_appointments.room_id = bb_rooms.id
        WHERE bb_orders.account_id = #{account.accountId}
        <if test="statuses!=null">
            AND bb_orders.status in
            <foreach collection="statuses" item="status" index="index" open="(" separator="," close=")">
                #{status.code}
            </foreach>
        </if>
        ORDER BY id DESC
        LIMIT ${(page - 1) * length},#{length}
    </select>

    <select id="supplierOrder" resultMap="lMap">
        SELECT bb_orders.id,
        CONCAT(DATE_FORMAT(bb_orders.created_at, '%Y%m%d'), LPAD(bb_orders.id, 6, 0)) AS order_no,
        bb_orders.account_id,
        bb_orders.account_name,
        bb_orders.total,
        bb_orders.pay_amount,
        bb_orders.coupon,
        bb_orders.status,
        bb_orders.remark,
        bb_orders.created_at,
        bb_orders.updated_at,
        bb_rooms.id AS appointed_room_id,
        bb_rooms.name AS appointed_room_name,
        CONCAT('https://bb-platform.oss-cn-hangzhou.aliyuncs.com/',bb_rooms.cover) AS appointed_room_cover,
        bb_order_appointments.start_time AS appointed_start_time,
        bb_order_appointments.end_time AS appointed_end_time,
        bb_order_appointments.contact_name AS appointed_contact_name,
        bb_order_appointments.contact_mobile AS appointed_contact_mobile,
        CONCAT(bb_rooms.project_name,bb_rooms.building_no,bb_rooms.floor_no,bb_rooms.room_no) AS appointed_room_address
        FROM bb_orders
        LEFT JOIN bb_order_appointments ON bb_orders.id = bb_order_appointments.order_id
        INNER JOIN bb_rooms ON bb_order_appointments.room_id = bb_rooms.id
        WHERE
        bb_rooms.project_id IN
        <foreach collection="account.staffList" item="staff" index="index" open="(" separator="," close=")">
            #{staff.projectId}
        </foreach>
        <if test="status=='uncofirmed'">
            AND bb_orders.status IN (0,2)
        </if>
        <if test="status=='confirmed'">
            AND bb_orders.status IN (1,3)
        </if>
        ORDER BY id DESC
        LIMIT ${(page - 1) * length},#{length}
    </select>

    <insert id="create" useGeneratedKeys="true" keyProperty="id">
        insert into bb_orders (account_id, account_name, total, coupon, pay_amount, status)
        values (#{accountId}, #{accountName}, #{total}, #{coupon}, #{payAmount}, #{status})
    </insert>

    <select id="findByOrderNo" resultMap="dMap">
        SELECT bb_orders.id,
               CONCAT(DATE_FORMAT(bb_orders.created_at, '%Y%m%d'), LPAD(bb_orders.id, 6, 0)) AS order_no,
               bb_orders.account_id,
               bb_orders.account_name,
               bb_orders.total,
               bb_orders.pay_amount,
               bb_orders.coupon,
               bb_orders.status,
               bb_orders.created_at,
               bb_orders.updated_at,
               bb_rooms.id                                                                   AS appointed_room_id,
               bb_rooms.name                                                                 AS appointed_room_name,
               bb_order_appointments.start_time                                              AS appointed_start_time,
               bb_order_appointments.end_time                                                AS appointed_end_time,
               bb_order_appointments.contact_name                                            AS appointed_contact_name,
               bb_order_appointments.contact_mobile                                          AS appointed_contact_mobile,
               bb_order_appointments.remark
        FROM bb_orders
                 LEFT JOIN bb_order_appointments ON bb_orders.id = bb_order_appointments.order_id
                 INNER JOIN bb_rooms ON bb_order_appointments.room_id = bb_rooms.id
        WHERE CONCAT(DATE_FORMAT(bb_orders.created_at, '%Y%m%d'), LPAD(bb_orders.id, 6, 0)) = #{orderNo}
        LIMIT 1
    </select>

    <select id="findById" resultMap="dMap">
        SELECT bb_orders.id,
               CONCAT(DATE_FORMAT(bb_orders.created_at, '%Y%m%d'), LPAD(bb_orders.id, 6, 0)) AS order_no,
               bb_orders.account_id,
               bb_orders.account_name,
               bb_orders.total,
               bb_orders.pay_amount,
               bb_orders.coupon,
               bb_orders.status,
               bb_orders.created_at,
               bb_orders.updated_at,
               bb_rooms.id                                                                   AS appointed_room_id,
               bb_rooms.name                                                                 AS appointed_room_name,
               bb_order_appointments.start_time                                              AS appointed_start_time,
               bb_order_appointments.end_time                                                AS appointed_end_time,
               bb_order_appointments.contact_name                                            AS appointed_contact_name,
               bb_order_appointments.contact_mobile                                          AS appointed_contact_mobile,
               bb_order_appointments.remark
        FROM bb_orders
                 LEFT JOIN bb_order_appointments ON bb_orders.id = bb_order_appointments.order_id
                 INNER JOIN bb_rooms ON bb_order_appointments.room_id = bb_rooms.id
        WHERE bb_orders.id = #{id}
        LIMIT 1
    </select>

    <update id="update">
        update bb_orders
        set status = #{status}
        WHERE CONCAT(DATE_FORMAT(bb_orders.created_at, '%Y%m%d'), LPAD(bb_orders.id, 6, 0)) = #{orderNo}
    </update>

    <update id="defray">
        update bb_orders
        set status   = #{status},
            pay_type = #{payType}
        WHERE CONCAT(DATE_FORMAT(bb_orders.created_at, '%Y%m%d'), LPAD(bb_orders.id, 6, 0)) = #{id}
    </update>

    <update id="using">
        UPDATE bb_orders LEFT JOIN bb_order_appointments ON bb_orders.id = bb_order_appointments.order_id
        SET status = 4
        WHERE CURRENT_TIMESTAMP > bb_order_appointments.end_time
          AND status = 3
    </update>
</mapper>