<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ace.dao.PriceMapper">
    <resultMap type="com.ace.entity.Price" id="priceMap">
        <id column="id" property="id"/>
        <result column="room_id" property="roomId" typeHandler="com.ace.dao.handler.StringListHandler"/>
        <result column="room_name" property="roomName" typeHandler="com.ace.dao.handler.StringListHandler"/>
        <result column="rental" property="rental"/>
        <result column="start_date" property="startDate"/>
        <result column="end_date" property="endDate"/>
        <result column="wday" property="wday" typeHandler="com.ace.dao.handler.WeekListTypeHandler"/>
        <result column="start_time" property="startTime"/>
        <result column="end_time" property="endTime"/>
        <result column="price" property="price"/>
        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>
    </resultMap>
    <resultMap id="roomMap" type="com.ace.entity.Room">
        <result column="room_id" property="id"/>
        <result column="room_name" property="name"/>
    </resultMap>
    <select id="recordsTotal" resultType="java.lang.Long">
        SELECT count(distinct(bb_room_prices.id)) AS recordsTotal
        FROM bb_room_prices
        LEFT JOIN bb_room_prices_ref ON bb_room_prices_ref.price_id = bb_room_prices.id
        INNER JOIN bb_rooms ON bb_rooms.id = bb_room_prices_ref.room_id
        <where>
            <if test="staff!=null">
                AND project_id = #{staff.projectId}
            </if>
            <if test="criteria.name!=null and criteria.name!=''">
                AND bb_rooms.name LIKE CONCAT('%',#{criteria.name},'%')
            </if>
            <if test="criteria.date!=null">
                AND #{criteria.date} BETWEEN bb_room_prices.start_date AND bb_room_prices.end_date
            </if>
        </where>
    </select>

    <select id="dataList" resultMap="priceMap">
        SELECT bb_room_prices.*, GROUP_CONCAT(bb_rooms.name) AS room_name
        FROM bb_room_prices
        INNER JOIN bb_room_prices_ref ON bb_room_prices_ref.price_id = bb_room_prices.id
        INNER JOIN bb_rooms ON bb_room_prices_ref.room_id = bb_rooms.id
        <where>
            <if test="staff!=null">
                AND project_id = #{staff.projectId}
            </if>
            <if test="criteria.name!=null and criteria.name!=''">
                AND bb_rooms.name LIKE CONCAT('%',#{criteria.name},'%')
            </if>
            <if test="criteria.date!=null">
                AND #{criteria.date} BETWEEN bb_room_prices.start_date AND bb_room_prices.end_date
            </if>
        </where>
        GROUP BY bb_room_prices.id
        ORDER BY bb_room_prices.updated_at DESC
        LIMIT #{criteria.start},#{criteria.length}
    </select>

    <!--获取日期有效的价格-->
    <select id="priceList" resultMap="priceMap">
        select * FROM bb_room_prices LEFT JOIN bb_room_prices_ref ON bb_room_prices.id = bb_room_prices_ref.price_id
        WHERE bb_room_prices_ref.room_id in
        <foreach collection="rooms" item="item" index="index"
                 open="(" separator="," close=")">
            #{item.id}
        </foreach>
        AND #{date} BETWEEN bb_room_prices.start_date AND bb_room_prices.end_date
        ORDER BY bb_room_prices.updated_at ASC
    </select>
    <!--获取日期有效的价格-->
    <select id="prices" resultMap="priceMap">
        select *
        FROM bb_room_prices
                 LEFT JOIN bb_room_prices_ref ON bb_room_prices.id = bb_room_prices_ref.price_id
        WHERE bb_room_prices_ref.room_id = #{room}
          AND #{date} BETWEEN bb_room_prices.start_date AND bb_room_prices.end_date
        ORDER BY bb_room_prices.updated_at ASC
    </select>


    <insert id="create" useGeneratedKeys="true" keyProperty="id">
        insert into bb_room_prices (rental, start_date, end_date, start_time, end_time, wday, price)
        values (#{rental,typeHandler=com.ace.dao.handler.EnumHandler},
                #{startDate},
                #{endDate},
                #{startTime},
                #{endTime},
                #{wday,typeHandler=com.ace.dao.handler.WeekListTypeHandler},
                #{price})
    </insert>
    <insert id="createRef" useGeneratedKeys="true">
        INSERT INTO bb_room_prices_ref (price_id,room_id) VALUES
        <foreach collection="rooms" item="item" separator=",">
            (#{priceId},#{item})
        </foreach>
        ON DUPLICATE KEY UPDATE id = id
    </insert>

    <delete id="deleteRef">
        DELETE
        FROM bb_room_prices_ref
        WHERE price_id = #{priceId}
    </delete>

    <select id="findById" resultMap="priceMap">
        SELECT bb_room_prices.*, GROUP_CONCAT(bb_rooms.id) AS room_id, GROUP_CONCAT(bb_rooms.name) AS room_name
        FROM bb_room_prices
                 INNER JOIN bb_room_prices_ref ON bb_room_prices_ref.price_id = bb_room_prices.id
                 INNER JOIN bb_rooms ON bb_room_prices_ref.room_id = bb_rooms.id
        WHERE bb_room_prices.id = #{id}
        GROUP BY bb_room_prices.id
        ORDER BY bb_room_prices.id DESC
    </select>

    <select id="findRefById" resultType="java.lang.Integer">
        select *
        from bb_room_prices_ref
        where price_id = #{id}
    </select>

    <update id="update">
        UPDATE bb_room_prices
        SET rental     = #{rental,typeHandler=com.ace.dao.handler.EnumHandler},
            start_date = #{startDate},
            end_date   = #{endDate},
            start_time = #{startTime},
            end_time   = #{endTime},
            wday       = #{wday,typeHandler=com.ace.dao.handler.WeekListTypeHandler},
            price      = #{price}
        WHERE id = #{id}
    </update>
    <delete id="delete">
        delete
        from bb_room_prices
        where id = #{id}
    </delete>
</mapper>