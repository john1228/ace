<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ace.dao.AppointmentMapper">
    <resultMap type="com.ace.entity.Appointment" id="apmMap">
        <result column="order_id" property="orderId"/>
        <result column="order_no" property="orderNo"/>
        <result column="room_id" property="roomId"/>
        <result column="meeting_name" property="meetingName"/>
        <result column="start_time" property="startTime"/>
        <result column="end_time" property="endTime"/>
        <result column="contact_name" property="contactName"/>
        <result column="contact_mobile" property="contactMobile"/>
        <result column="room_name" property="roomName"/>
        <result column="room_mobile" property="roomMobile"/>
        <result column="room_refund" property="roomRefund"/>
        <result column="room_renew" property="roomRenew"/>
        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>
    </resultMap>
    <select id="isExists" resultType="boolean">
        SELECT count(1)
        FROM bb_order_appointments boa
                 LEFT JOIN bb_orders bo ON boa.order_id = bo.id
        WHERE bo.status IN (0, 1, 2, 3, 4)
          AND boa.room_id = #{room}
          AND (boa.start_time BETWEEN #{start} AND #{end})
    </select>

    <insert id="create" useGeneratedKeys="true" keyProperty="id">
        insert into bb_order_appointments (order_id,
                                           room_id,
                                           meeting_name,
                                           start_time,
                                           end_time,
                                           contact_name,
                                           contact_mobile)
        values (#{orderId}, #{roomId}, #{meetingName}, #{startTime}, #{endTime}, #{contactName}, #{contactMobile})
    </insert>
    <select id="selectByOrder" resultType="com.ace.entity.Appointment">
        SELECT room_id                    AS roomId,
               bb_rooms.name              AS roomName,
               bb_rooms.supervisor_mobile AS roomMobile,
               bb_rooms.refund_limit_time AS roomRefund,
               bb_rooms.renew             AS roomRenew,
               CONCAT(bb_rooms.project_name, bb_rooms.building_no, '幢', bb_rooms.floor_no, '层', bb_rooms.room_no,
                      '室')                AS address,
               meeting_name               AS meetingName,
               start_time                 AS startTime,
               end_time                   AS endTime,
               contact_name               AS contactName,
               contact_mobile             AS contactMobile,
               remark
        FROM bb_order_appointments
                 LEFT JOIN bb_rooms on bb_order_appointments.room_id = bb_rooms.id
        WHERE order_id = #{order}
    </select>

    <select id="selectByOrderNo" resultType="com.ace.entity.Appointment">
        SELECT room_id                      AS roomId,
               bb_rooms.name                AS roomName,
               bb_rooms.supervisor_mobile   AS roomMobile,
               bb_rooms.refund_limit_time   AS roomRefund,
               bb_rooms.renew               AS roomRenew,
               CONCAT(bb_rooms.project_name, bb_rooms.building_no, '幢', bb_rooms.floor_no, '层', bb_rooms.room_no,
                      '室')                  AS address,
               meeting_name                 AS meetingName,
               start_time                   AS startTime,
               end_time                     AS endTime,
               contact_name                 AS contactName,
               contact_mobile               AS contactMobile,
               bb_order_appointments.remark AS remark
        FROM bb_order_appointments
                 LEFT JOIN bb_rooms ON bb_order_appointments.room_id = bb_rooms.id
                 LEFT JOIN bb_orders ON bb_orders.id = bb_order_appointments.order_id
        WHERE CONCAT(DATE_FORMAT(bb_orders.created_at, '%Y%m%d'), LPAD(bb_orders.id, 6, 0)) = #{orderNo}
    </select>


    <select id="weekly" resultMap="apmMap">
        SELECT order_id,
               CONCAT(DATE_FORMAT(bb_orders.created_at, '%Y%m%d'), LPAD(bb_orders.id, 6, 0)) as order_no,
               room_id,
               bb_rooms.name                                                                 as room_name,
               meeting_name,
               start_time,
               end_time,
               contact_name,
               contact_mobile
        FROM bb_order_appointments
                 INNER JOIN bb_rooms ON bb_rooms.id = bb_order_appointments.room_id
                 INNER JOIN bb_orders ON bb_orders.id = bb_order_appointments.order_id
        WHERE bb_orders.status IN (0, 1, 2, 3)
          AND bb_order_appointments.room_id = #{criteria.roomId}
          AND (bb_order_appointments.created_at BETWEEN DATE(#{criteria.date} + INTERVAL (1 - DAYOFWEEK(#{criteria.date})) DAY) AND DATE(#{criteria.date} + INTERVAL (7 - DAYOFWEEK(#{criteria.date})) DAY))
    </select>

    <select id="daily" resultMap="apmMap">
        SELECT order_id,
               room_id,
               bb_rooms.name as room_name,
               meeting_name,
               start_time,
               end_time,
               contact_name,
               contact_mobile
        FROM bb_order_appointments
                 INNER JOIN bb_rooms ON bb_rooms.id = bb_order_appointments.room_id
                 INNER JOIN bb_orders ON bb_orders.id = bb_order_appointments.order_id
        WHERE bb_orders.status IN (0, 1, 2, 3)
          AND bb_order_appointments.room_id = #{room}
          AND (bb_order_appointments.start_time BETWEEN #{date} AND DATE_ADD(#{date}, interval 1 day))
    </select>
</mapper>